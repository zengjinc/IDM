<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-config.dtd">

<!-- 配置别名、settings、mapper。 -->
<configuration>

	<!-- 配置顺序
		properties（属性）
		settings（全局配置参数）
		typeAliases（类型别名）
		typeHandlers（类型处理器）
		objectFactory（对象工厂）
		plugins（插件）
		environments（环境集合属性对象）
		environment（环境子属性对象）
		transactionManager（事务管理）
		dataSource（数据源）
		mappers（映射器）
	 -->

	<!-- 定义 别名 -->
	<typeAliases>
		<!-- 批量别名定义 指定包路径，自动扫描包下边的pojo，定义别名，别名默认为类名（首字母小写或大写） -->
		<package name="com.ssm.pojo" />
		<!--
		 ......	package 属性可以有多个 
		-->

	</typeAliases>
	
	<plugins>
		<!-- 配置mybatis 分页插件 -->
        <plugin interceptor="com.github.miemiedev.mybatis.paginator.OffsetLimitInterceptor">
            <property name="dialectClass" value="com.github.miemiedev.mybatis.paginator.dialect.MySQLDialect"/>
        </plugin>
    </plugins>
	
	<!-- 使用自动扫描器时，mapper.xml文件如果和mapper.java接口在一个目录则此处不用定义mappers -->
	<mappers>
		<!-- 批量加载mapper
		指定mapper接口的包名，mybatis自动扫描包下边所有mapper接口进行加载
		遵循一些规范：需要将mapper接口类名和mapper.xml映射文件名称保持一致，且在一个目录 中
		上边规范的前提是：使用的是mapper代理方法
		
		和spring整合后，使用mapper扫描器，这里不需要配置了
		 -->
<!-- 		<package name="com.ssm.mapper" /> -->
	</mappers>
</configuration>