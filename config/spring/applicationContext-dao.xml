<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd ">

	<!-- 配置数据源、SqlSessionFactory、mapper扫描器 -->

	<!-- 加载配置文件 -->
<!-- 	<context:property-placeholder location="classpath:jdbc.properties,classpath:config.properties" /> -->
	<!-- 将多个配置文件读取到容器中，交给Spring管理 -->  
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="locations">  
           <list>  
              <!-- 这里支持多种寻址方式：classpath和file -->  
              <value>classpath:jdbc.properties</value>  
              <value>classpath:config.properties</value>  
              <!-- 推荐使用file的方式引入，这样可以将配置和代码分离 -->  
<!--               <value>file:/opt/demo/config/demo-mq.properties</value>   -->
<!--               <value>file:/opt/demo/config/demo-remote.properties</value>   -->
            </list>  
        </property>  
    </bean>  

	<!-- 配置数据库连接池 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver_class}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="maxIdle" value="${jdbc.maxIdle}" />
	</bean>

	<!-- spring管理sqlsessionfactory 使用mybatis和spring整合包中的SqlSessionFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 数据源 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 加载mybatis的全局配置文件 -->
		<property name="configLocation" value="classpath:mybatis/sqlMapConfig.xml" />
	</bean>

	<!-- mapper配置：使用mapper扫描器，指定mapper接口的包名，mybatis自动扫描包下边所有mapper接口进行加载 创建到spring容器中，bean 
		的 id 是类名（首字母小写） 遵循一些规范：需要将mapper接口类名和mapper.xml映射文件名称保持一致，且在一个目录 中 basePackage：扫描包路径，中间可以用逗号或分号分隔定义多个包 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.ssm.mapper"></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<!-- scheduler -->
	<bean id="scheduler"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<!-- <property name="startupDelay" value="180"/>  启动服务器后延迟启动定时任务 -->
	</bean>
	
	<!--javaMailSender-->
	<bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="${host}" />
		<property name="port" value="${port}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		<property name="defaultEncoding" value="UTF-8" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">${mail.smtp.auth}</prop>
				<prop key="mail.smtp.ssl.enable">${mail.smtp.ssl.enable}</prop>
				<prop key="mail.smtp.starttls.enable">${mail.smtp.starttls.enable}</prop>
				<prop key="mail.debug">true</prop>
			</props>
		</property>
	</bean>
	
	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
          <!-- 线程池维护线程的最少数量 -->
          <property name="corePoolSize" value="5" />
          <!-- 允许的空闲时间 -->
          <property name="keepAliveSeconds" value="200" />
          <!-- 线程池维护线程的最大数量 -->
          <property name="maxPoolSize" value="10" />
          <!-- 缓存队列 -->
         <property name="queueCapacity" value="20" />
         <!-- 对拒绝task的处理策略 -->
         <property name="rejectedExecutionHandler">
             <bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
         </property>
     </bean>
<!--     <bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl"> -->
<!--         <property name="host" value="smtp.163.com"/> -->
<!--         <property name="port" value="465"/> -->
<!--         <property name="username" value="zengjinc_zp@163.com"/> -->
<!--         <property name="password" value="chenzj1995"/> -->
<!--         <property name="defaultEncoding" value="UTF-8" /> -->
<!--         <property name="javaMailProperties"> -->
<!--             <props> -->
<!--                 <prop key="mail.smtp.auth">true</prop> -->
<!--                 <prop key="mail.smtp.ssl.enable">true</prop> -->
<!--                 <prop key="mail.smtp.starttls.enable">false</prop> -->
<!--                 <prop key="mail.debug">true</prop> -->
<!--             </props> -->
<!--         </property> -->
<!--     </bean> -->
   

</beans>